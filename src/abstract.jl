"""
    AbstractSymmetry

Supertype for symmetries in a spin system.

# External Interface
- [`apply(symmetry, index)`](@ref)

# Internal Interface
Subtypes must implement:
- [`_order(::MyType)`](@ref)
- `(::MyType)(x)` should apply the symmetry operation to a BINARY index `x` in range 0:2^N-1
"""
abstract type AbstractSymmetry end

"""
    apply(symmetry, index)

Compute the action of the symmetry operation on a basis state given by index.
"""
function apply end

# Default: convert between 1-based indexing and bit representation of spin bases
apply(symmetry::AbstractSymmetry, index) = symmetry(index-1)+1


"""
    _order(symmetry)

Return the size of the group generated by the symmetry; i.e. the smallest, positive number k
such that `symmetry` applied k times is the identity function.
"""
function _order end



# Act as a scalar for broadcasting.
# Since a symmetry behaves like a function object, this enables standard broadcasting.
Base.Broadcast.broadcastable(as::AbstractSymmetry) = Ref(as)
